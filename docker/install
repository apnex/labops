#!/bin/bash
## combined workflow for centos 7 docker preparation

# base OS prep
echo "### install baseos prerequisites ###"
sleep 1
yum install -y epel-release
yum install -y \
	openssl \
	jq \
	open-vm-tools

# disable selinux
echo "### disable selinux ###"
sleep 1
setenforce 0
sed -i 's/^SELINUX=[a-z]*$/SELINUX=disabled/' /etc/selinux/config

# disable swap
echo "### disable swap ###"
sleep 1
sed -i '/swap/d' /etc/fstab
swapoff -a

# load modules
echo "### check and load modules ###"
sleep 1
read -r -d '' MODULELIST <<'EOF'
[
	"br_netfilter",
	"ip6_udp_tunnel",
	"ip_set",
	"ip_set_hash_ip",
	"ip_set_hash_net",
	"iptable_filter",
	"iptable_nat",
	"iptable_mangle",
	"iptable_raw",
	"nf_conntrack_netlink",
	"nf_conntrack",
	"nf_conntrack_ipv4",
	"nf_defrag_ipv4",
	"nf_nat",
	"nf_nat_ipv4",
	"nf_nat_masquerade_ipv4",
	"nfnetlink",
	"udp_tunnel",
	"veth",
	"vxlan",
	"x_tables",
	"xt_addrtype",
	"xt_conntrack",
	"xt_comment",
	"xt_mark",
	"xt_multiport",
	"xt_nat",
	"xt_recent",
	"xt_set",
	"xt_statistic",
	"xt_tcpudp"
]
EOF
for MODULE in $(printf "${MODULELIST}" | jq -r '.[]'); do
	if [[ ! $(lsmod | grep ${MODULE}) ]]; then
		if [[ ! $(cat /lib/modules/$(uname -r)/modules.builtin | grep ${MODULE}) ]]; then
			echo "module ${MODULE} is MISSING, loading";
			modprobe ${MODULE}
		fi
	fi;
done
echo "### performing module check.. "
for MODULE in $(printf "${MODULELIST}" | jq -r '.[]'); do
	if [[ $(lsmod | grep ${MODULE}) ]]; then
		echo "module ${MODULE} is LOADED";
	elif [[ $(cat /lib/modules/$(uname -r)/modules.builtin | grep ${MODULE}) ]]; then
		echo "module ${MODULE} is BUILTIN";
	else
		echo "module ${MODULE} is MISSING";
	fi;
done

# enable ip-forward / nf-call-iptables
echo "### enable ip_forward, ns-call-iptables ###"
sleep 1
cat <<-EOF > /etc/sysctl.d/k8s.conf
	net.bridge.bridge-nf-call-ip6tables = 1
	net.bridge.bridge-nf-call-iptables = 1
	net.ipv4.ip_forward = 1
EOF
sysctl --system
sysctl net.bridge.bridge-nf-call-iptables

# remove existing docker
echo "### remove existing docker ###"
sleep 1
yum remove \
	docker \
	docker-client \
	docker-client-latest \
	docker-common \
	docker-latest \
	docker-latest-logrotate \
	docker-logrotate \
	docker-engine

# setup docker repo
echo "### setup docker repo ###"
sleep 1
yum install -y \
	yum-utils
yum-config-manager \
	--add-repo \
	https://download.docker.com/linux/centos/docker-ce.repo

# install docker
echo "### install docker ###"
sleep 1
yum install -y \
	docker-ce \
	docker-ce-cli \
	containerd.io

# start docker and enable on-boot
echo "### start docker ###"
sleep 1
systemctl enable docker
systemctl start docker
