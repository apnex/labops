## sql tuning
local_infile		= 1 	# allow local file load
performance_schema	= 0
key_buffer_size	= 8M 
max_connections	= 30	# Limit connections
thread_stack		= 128K

yum install -y mysql

### database prep
echo "------- MYSQL DATABASE SETUP -------"
echo "updating apt-get..."
apt-get update
echo "apt-get installing curl..."
apt-get --assume-yes install curl
apt-get --assume-yes install wget
apt-get --assume-yes install unzip
echo "downloading planespotter scripts..."
mkdir -p ~/planespotter
mkdir -p ~/planespotter/db-install
cd ~/planespotter/db-install
curl -L -o create-planespotter-db.sh https://github.com/yfauser/planespotter/raw/master/db-install/create-planespotter-db.sh
curl -L -o create-planespotter-db.sql https://github.com/yfauser/planespotter/raw/master/db-install/create-planespotter-db.sql
curl -L -o delete-planespotter-db.sh https://github.com/yfauser/planespotter/raw/master/db-install/delete-planespotter-db.sh
curl -L -o delete-planespotter-db.sql https://github.com/yfauser/planespotter/raw/master/db-install/delete-planespotter-db.sql
echo "creating a new planespotter db"
chmod +x create-planespotter-db.sh
./create-planespotter-db.sh

### new setting?
set global performance_schema=true;

[client]
local_infile=1
[mysql]

[mysqld]
local_infile=1

## show global setting
show global variables like 'performance_schema';

### update cli
mysql -u root -ppassword

## .sql file
mysql --local_infile=1 --user=root --password=$MYSQL_ROOT_PASSWORD < create-planespotter-db.sql

use planespotter;
LOAD DATA LOCAL INFILE '~/planespotter/db-install/MASTER.txt'
INTO TABLE MASTER
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

### tail the DB logs
kubectl -n psnew logs --follow mysql-0


        - name: mysql-config-file
          mountPath: /etc/mysql/my.cnf
          subPath: my.cnf

