## base OS prep
hostnamectl set-hostname web01
yum install -y epel-release
yum install -y openssl jq open-vm-tools

## disable selinux
setenforce 0
sed -i 's/^SELINUX=[a-z]*$/SELINUX=disabled/' /etc/selinux/config

## disable swap
sed -i '/swap/d' /etc/fstab
swapoff -a
exec bash

## setup docker repo
yum install -y yum-utils
yum-config-manager \
	--add-repo \
	https://download.docker.com/linux/centos/docker-ce.repo

## install docker
yum install -y docker-ce docker-ce-cli containerd.io
systemctl enable docker
systemctl start docker

## install kubectl
KUBERELEASE=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)
curl -Lo /usr/local/bin/kubectl "https://storage.googleapis.com/kubernetes-release/release/${KUBERELEASE}/bin/linux/amd64/kubectl"
chmod +x /usr/local/bin/kubectl
kubectl version --client

## install kind
curl -Lo /usr/local/bin/kind https://kind.sigs.k8s.io/dl/v0.8.1/kind-linux-amd64
chmod +x /usr/local/bin/kind
kind version

## create kind config
kind: Cluster
apiVersion: kind.sigs.k8s.io/v1alpha3
nodes:
- role: control-plane
- role: worker

## start kind
kind create cluster --config config

## auth to cluster
kubectl cluster-info --context kind


## install metallb
# https://metallb.universe.tf/installation/
kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/namespace.yaml
kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/metallb.yaml
# On first install only
kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"

## create metallb config
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: metallb-system
  name: config
data:
  config: |
    address-pools:
    - name: default
      protocol: layer2
      addresses:
      - 172.19.255.1-172.19.255.250

## apply metal config
kubectl apply -f metal-config.yaml

## iptables forward to MetalLB IP address
sysctl -w net.ipv4.ip_forward=1
sysctl -p /etc/sysctl.conf 
iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j DNAT --to 172.19.255.1:80
iptables -t nat -L -n -v
yum install -y iptables-services
service iptables save
service iptables restart
chkconfig iptables on

## iptables
-- build custom chain for backend nat
iptables -N KINDNAT

http://127.0.0.1:38753

## API server test
curl -ik \
     -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
     https://kubernetes.default.svc.cluster.local/api/v1/namespaces/default/pods

https://storage.googleapis.com/kubernetes-release/release/v1.19.1kubectl


export ARGOCD_SERVER=argocd.lab02
curl -sSL -o /usr/local/bin/argocd https://${ARGOCD_SERVER}/download/argocd-linux-amd64
argocd app sync guestbook
argocd app wait guestbook
